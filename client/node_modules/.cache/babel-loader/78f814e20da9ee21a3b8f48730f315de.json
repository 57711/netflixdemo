{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imsbt\\\\OneDrive\\\\\\u684C\\u9762\\\\httpd-2.4.39-win64-VS16\\\\Apache24\\\\htdocs\\\\react\\\\netflix\\\\client\\\\src\\\\components\\\\Recommandation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData, addMyList } from '../action';\nimport renderList from './RenderList';\n\nclass recommendation extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      onHover: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchData(\"recommendations\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Recommendation\"), React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(RenderList, {\n      data: this.props.data,\n      currentId: this.state.onHover,\n      changeState: value => this.setState({\n        onHover: value\n      }),\n      clickHandler: this.props.addMyList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    data: state.recommend\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData,\n  addMyList\n})(recommendation);","map":{"version":3,"sources":["C:/Users/imsbt/OneDrive/桌面/httpd-2.4.39-win64-VS16/Apache24/htdocs/react/netflix/client/src/components/Recommandation.js"],"names":["React","connect","fetchData","addMyList","renderList","recommendation","Component","state","onHover","componentDidMount","props","render","data","value","setState","mapStateToProps","recommend"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,WAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AAACC,MAAAA,OAAO,EAAE;AAAV,KADiC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWR,SAAX,CAAqB,iBAArB;AACH;;AAEDS,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IADjB;AAEA,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWC,OAFtB;AAGA,MAAA,WAAW,EAAGK,KAAD,IAAS,KAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEK;AAAV,OAAd,CAHtB;AAIA,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWP,SAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAaH;;AApBwC;;AAsB7C,MAAMY,eAAe,GAAIR,KAAD,IAAW;AAC/B;AACA,SAAO;AAACK,IAAAA,IAAI,EAAEL,KAAK,CAACS;AAAb,GAAP;AACH,CAHD;;AAIA,eAAef,OAAO,CAACc,eAAD,EAAiB;AAACb,EAAAA,SAAD;AAAWC,EAAAA;AAAX,CAAjB,CAAP,CAA+CE,cAA/C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData, addMyList } from '../action';\r\nimport renderList from './RenderList';\r\n\r\n\r\nclass recommendation extends React.Component {\r\n    state = {onHover: null};\r\n    componentDidMount(){\r\n        this.props.fetchData(\"recommendations\");\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"ui container\">\r\n                <h3 className=\"first\">Recommendation</h3>\r\n                <div className=\"ui grid\">\r\n                    <RenderList \r\n                    data={this.props.data}\r\n                    currentId={this.state.onHover}\r\n                    changeState={(value)=>this.setState({onHover: value})}\r\n                    clickHandler={this.props.addMyList}\r\n                    />\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {data: state.recommend}\r\n}\r\nexport default connect(mapStateToProps,{fetchData,addMyList})(recommendation);"]},"metadata":{},"sourceType":"module"}