{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\imsbt\\\\OneDrive\\\\\\u684C\\u9762\\\\httpd-2.4.39-win64-VS16\\\\Apache24\\\\htdocs\\\\react\\\\netflix\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\imsbt\\\\OneDrive\\\\\\u684C\\u9762\\\\httpd-2.4.39-win64-VS16\\\\Apache24\\\\htdocs\\\\react\\\\netflix\\\\client\\\\src\\\\components\\\\ShowList.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { fetchData, addMyList, removeMyList } from '../action';\n\nconst ShowList = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        onHover = _useState2[0],\n        changeHover = _useState2[1];\n\n  const title = props.title.replace(\" \", \"\").toLowerCase();\n\n  const clickHandler = item => {\n    switch (title) {\n      case \"mylist\":\n        return props.removeMyList(item);\n\n      case \"recommendations\":\n        return props.addMyList(item);\n\n      default:\n        return null;\n    }\n  };\n\n  useEffect(() => {\n    props.fetchData(title);\n  }, []);\n\n  const renderList = () => {\n    if (Array.isArray(props.data) === true) {\n      return props.data.map(item => {\n        return React.createElement(\"div\", {\n          className: \"ui three wide column\",\n          key: item.id,\n          onMouseOver: () => changeHover(item.id),\n          onMouseOut: () => changeHover(null),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"ui medium image\",\n          alt: \"\",\n          src: item.img,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          onMouseOut: event => event.stopPropagation(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, item.title), React.createElement(\"div\", {\n          style: {\n            height: 30 + 'px'\n          },\n          onMouseOut: event => event.stopPropagation(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, onHover === item.id && React.createElement(\"button\", {\n          className: \"tiny ui inverted primary fluid button \",\n          onClick: () => clickHandler(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, props.buttonText)));\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"loading...\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"first\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.title), React.createElement(\"div\", {\n    className: \"ui grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, renderList()));\n};\n\nShowList.propTypes = {\n  // data: PropTypes.oneOfType([\n  //     PropTypes.object,\n  //     PropTypes.array\n  // ]).isRequired,\n  title: PropTypes.string.isRequired,\n  // clickHandler: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const title = ownProps.title.replace(\" \", \"\").toLowerCase();\n  return {\n    data: state[title]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData,\n  addMyList,\n  removeMyList\n})(ShowList);","map":{"version":3,"sources":["C:/Users/imsbt/OneDrive/桌面/httpd-2.4.39-win64-VS16/Apache24/htdocs/react/netflix/client/src/components/ShowList.js"],"names":["React","useState","useEffect","PropTypes","connect","fetchData","addMyList","removeMyList","ShowList","props","onHover","changeHover","title","replace","toLowerCase","clickHandler","item","renderList","Array","isArray","data","map","id","img","event","stopPropagation","height","buttonText","propTypes","string","isRequired","mapStateToProps","state","ownProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData, addMyList, removeMyList } from '../action';\r\n\r\nconst ShowList = props => {\r\n    const [onHover, changeHover] = useState(null);\r\n    const title = props.title.replace(\" \",\"\").toLowerCase();\r\n    const clickHandler = (item) => {\r\n        switch (title){\r\n            case \"mylist\":\r\n                return props.removeMyList(item);\r\n            case \"recommendations\":\r\n                return props.addMyList(item);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        props.fetchData(title);\r\n    },[]);\r\n\r\n    const renderList = () => {\r\n        if(Array.isArray(props.data) === true){\r\n            return props.data.map(item => {\r\n                return (\r\n                    <div className=\"ui three wide column\" \r\n                    key={item.id} \r\n                    onMouseOver={()=>changeHover(item.id)}\r\n                    onMouseOut={()=>changeHover(null)}>\r\n                        <img className=\"ui medium image\" alt=\"\" src={item.img} />\r\n                        <div onMouseOut={(event)=> event.stopPropagation()}>{item.title}</div>\r\n                        <div style={{height:30+'px'}} \r\n                        onMouseOut={(event)=> event.stopPropagation()}>\r\n                            {onHover===item.id&&\r\n                            <button \r\n                            className=\"tiny ui inverted primary fluid button \" \r\n                            onClick={()=>clickHandler(item)}>\r\n                                {props.buttonText}\r\n                            </button>}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n        }else{\r\n            return <div>loading...</div>\r\n        }                \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3 className=\"first\">{props.title}</h3>\r\n            <div className=\"ui grid\">\r\n                {renderList()}\r\n            </div>                               \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nShowList.propTypes = {\r\n    // data: PropTypes.oneOfType([\r\n    //     PropTypes.object,\r\n    //     PropTypes.array\r\n    // ]).isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    // clickHandler: PropTypes.func.isRequired,\r\n    buttonText: PropTypes.string.isRequired\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const title = ownProps.title.replace(\" \",\"\").toLowerCase();\r\n    return {data:state[title]}\r\n}\r\nexport default connect(mapStateToProps, {fetchData,addMyList,removeMyList})(ShowList);"]},"metadata":{},"sourceType":"module"}