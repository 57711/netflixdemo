{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imsbt\\\\OneDrive\\\\\\u684C\\u9762\\\\httpd-2.4.39-win64-VS16\\\\Apache24\\\\htdocs\\\\react\\\\netflix\\\\client\\\\src\\\\components\\\\Recommandation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData, addMyList } from '../action';\n\nclass recommendation extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      onHover: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchData(\"recommendations\");\n  }\n\n  renderList() {\n    if (Array.isArray(this.props.data) === true) {\n      return this.props.data.map(item => {\n        return React.createElement(\"div\", {\n          className: \"ui three wide column\",\n          key: item.id,\n          onMouseOver: () => this.setState({\n            onHover: item.id\n          }),\n          onMouseOut: () => this.setState({\n            onHover: null\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"ui medium image\",\n          alt: \"\",\n          src: item.img,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          onMouseOut: event => event.stopPropagation(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, item.title), React.createElement(\"div\", {\n          style: {\n            height: 30 + 'px'\n          },\n          onMouseOut: event => event.stopPropagation(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, this.state.onHover === item.id ? React.createElement(\"button\", {\n          className: \"tiny ui button\",\n          onClick: () => this.props.addMyList(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Add\") : ''));\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"loading...\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Recommendation\"), React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    data: state.recommend\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData,\n  addMyList\n})(recommendation);","map":{"version":3,"sources":["C:/Users/imsbt/OneDrive/桌面/httpd-2.4.39-win64-VS16/Apache24/htdocs/react/netflix/client/src/components/Recommandation.js"],"names":["React","connect","fetchData","addMyList","recommendation","Component","state","onHover","componentDidMount","props","renderList","Array","isArray","data","map","item","id","setState","img","event","stopPropagation","title","height","render","mapStateToProps","recommend"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,WAArC;;AAGA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AAACC,MAAAA,OAAO,EAAE;AAAV,KADiC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWP,SAAX,CAAqB,iBAArB;AACH;;AAEDQ,EAAAA,UAAU,GAAE;AACR,QAAGC,KAAK,CAACC,OAAN,CAAc,KAAKH,KAAL,CAAWI,IAAzB,MAAmC,IAAtC,EAA2C;AACvC,aAAO,KAAKJ,KAAL,CAAWI,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,IAAI;AAC/B,eACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AACA,UAAA,GAAG,EAAEA,IAAI,CAACC,EADV;AAEA,UAAA,WAAW,EAAE,MAAI,KAAKC,QAAL,CAAc;AAACV,YAAAA,OAAO,EAAEQ,IAAI,CAACC;AAAf,WAAd,CAFjB;AAGA,UAAA,UAAU,EAAE,MAAI,KAAKC,QAAL,CAAc;AAACV,YAAAA,OAAO,EAAE;AAAV,WAAd,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,GAAG,EAAC,EAArC;AAAwC,UAAA,GAAG,EAAEQ,IAAI,CAACG,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAKI;AAAM,UAAA,UAAU,EAAGC,KAAD,IAAUA,KAAK,CAACC,eAAN,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsDL,IAAI,CAACM,KAA3D,CALJ,EAMI;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAC,KAAG;AAAX,WAAZ;AACA,UAAA,UAAU,EAAGH,KAAD,IAAUA,KAAK,CAACC,eAAN,EADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEK,KAAKd,KAAL,CAAWC,OAAX,KAAqBQ,IAAI,CAACC,EAA1B,GAA6B;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAI,KAAKP,KAAL,CAAWN,SAAX,CAAqBY,IAArB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA7B,GAAsH,EAF3H,CANJ,CADJ;AAaH,OAdM,CAAP;AAeH,KAhBD,MAgBK;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;AAEJ;;AACDQ,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,UAAL,EADL,CAFJ,CADJ;AAQH;;AArCwC;;AAuC7C,MAAMc,eAAe,GAAIlB,KAAD,IAAW;AAC/B;AACA,SAAO;AAACO,IAAAA,IAAI,EAAEP,KAAK,CAACmB;AAAb,GAAP;AACH,CAHD;;AAIA,eAAexB,OAAO,CAACuB,eAAD,EAAiB;AAACtB,EAAAA,SAAD;AAAWC,EAAAA;AAAX,CAAjB,CAAP,CAA+CC,cAA/C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData, addMyList } from '../action';\r\n\r\n\r\nclass recommendation extends React.Component {\r\n    state = {onHover: null};\r\n    componentDidMount(){\r\n        this.props.fetchData(\"recommendations\");\r\n    }\r\n    \r\n    renderList(){\r\n        if(Array.isArray(this.props.data) === true){\r\n            return this.props.data.map(item => {\r\n                return (\r\n                    <div className=\"ui three wide column\" \r\n                    key={item.id} \r\n                    onMouseOver={()=>this.setState({onHover: item.id})}\r\n                    onMouseOut={()=>this.setState({onHover: null})}>\r\n                        <img className=\"ui medium image\" alt=\"\" src={item.img} />\r\n                        <span onMouseOut={(event)=> event.stopPropagation()}>{item.title}</span>\r\n                        <div style={{height:30+'px'}} \r\n                        onMouseOut={(event)=> event.stopPropagation()}>\r\n                            {this.state.onHover===item.id?<button className=\"tiny ui button\" onClick={()=>this.props.addMyList(item)}>Add</button>:''}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n        }else{\r\n            return <div>loading...</div>\r\n        }\r\n                \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"ui container\">\r\n                <h3 className=\"first\">Recommendation</h3>\r\n                <div className=\"ui grid\">\r\n                    {this.renderList()}\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {data: state.recommend}\r\n}\r\nexport default connect(mapStateToProps,{fetchData,addMyList})(recommendation);"]},"metadata":{},"sourceType":"module"}